{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dice-manager/dice-manager.component.css","webpack:///./src/app/dice-manager/dice-manager.component.html","webpack:///./src/app/dice-manager/dice-manager.component.ts","webpack:///./src/app/dice.ts","webpack:///./src/app/dice/dice.component.html","webpack:///./src/app/dice/dice.component.scss","webpack:///./src/app/dice/dice.component.ts","webpack:///./src/app/service/monsters.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div class=\\\"col-sm-4 col-xl-4 col-xs-4\\\">\\n  <dice-manager></dice-manager>\\n</div>\\n\\n<div class=\\\"col-sm-4 col-xl-4 col-xs-4\\\">\\n  <mat-card>Simple card</mat-card>\\n  <mat-card>Simple card</mat-card>\\n  <mat-card>Simple card</mat-card>\\n  <mat-card>Simple card</mat-card>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule} from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule, MatInputModule } from '@angular/material';\r\nimport { DiceComponent } from './dice/dice.component';\r\nimport { DiceManagerComponent } from './dice-manager/dice-manager.component';\r\n\r\nimport { MonsterService } from './service/monsters.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DiceComponent,\r\n    DiceManagerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    HttpClientModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n  ],\r\n  exports: [\r\n    MatCardModule,\r\n    MatInputModule,\r\n  ],\r\n  providers: [\r\n    MonsterService,\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".dice-manager__add-button{\\r\\n    font-size: 34px;\\r\\n    color: grey;\\r\\n    margin-left: 45%;\\r\\n    padding-top: 5px;\\r\\n    transition: all .2s ease-in-out;\\r\\n}\\r\\n\\r\\n.dice-manager__add-button:hover {\\r\\n    -webkit-transform: scale(1.2);\\r\\n            transform: scale(1.2);\\r\\n}\"","module.exports = \"<div\\r\\n  class=\\\"dice-manager__add-button glyphicon glyphicon-plus-sign\\\"\\r\\n  (click)=\\\"addDice()\\\"\\r\\n></div>\\r\\n<app-dice *ngFor=\\\"let dice of dices\\\" [dice]=\\\"dice\\\" (onDelete)=\\\"removeDice($event)\\\"></app-dice>\"","import { Component, OnInit } from '@angular/core';\nimport { MonsterService } from '../service/monsters.service';\nimport {Dice} from \"../dice\";\n\n@Component({\n  selector: 'dice-manager',\n  templateUrl: './dice-manager.component.html',\n  styleUrls: ['./dice-manager.component.css']\n})\nexport class DiceManagerComponent {\n  diceCounter = 0;\n  dices: Dice [] = [];\n  constructor(private monsterService: MonsterService) {\n    monsterService.getUsers().subscribe((data) => {\n      console.log(data);\n    });\n  }\n\n  addDice(){\n    this.dices.push(\n        {\n          id: this.diceCounter,\n          name: \"Potato's dices\",\n          nbDice: 1,\n          diceType: 6,\n          resultMessage: null,\n          bonus: 0\n        }\n    );\n    this.diceCounter++;\n  }\n\n  removeDice(id) {\n    this.dices = this.dices.filter((el) => {\n      return el.id !== id;\n    });\n  }\n}","/**\r\n * Created by Epulapp on 02/05/2017.\r\n */\r\n\r\nexport class Dice {\r\n    id: number;\r\n    name: string;\r\n    nbDice: number;\r\n    diceType: number;\r\n    resultMessage: string;\r\n    bonus: number;\r\n}","module.exports = \"<mat-card>   \\r\\n  <!-- Dice Title-->\\r\\n  <div *ngIf=\\\"!editionMode\\\" class=\\\"dice-title\\\">\\r\\n    <span>{{dice.name}}</span>\\r\\n    <span (click)=\\\"editionMode=true\\\" class=\\\"material-icons small\\\">edit</span>\\r\\n  </div>\\r\\n  <form *ngIf=\\\"editionMode\\\" class=\\\"dice-title-edit\\\">\\r\\n    <input [(ngModel)]=\\\"dice.name\\\" name=\\\"diceName\\\" placeholder=\\\"name\\\">\\r\\n    <button (click)=\\\"editionMode=false\\\" class=\\\"material-icons small\\\">check</button>\\r\\n  </form>\\r\\n\\r\\n  <!-- Dice differents forms-->\\r\\n  <div class=\\\"dice-component\\\">\\r\\n    <form>\\r\\n      <div class=\\\"form-child\\\">\\r\\n        <span>\\r\\n          <input\\r\\n            [(ngModel)]=\\\"dice.nbDice\\\"\\r\\n            type=\\\"number\\\"\\r\\n            name=\\\"diceNumber\\\"\\r\\n            placeholder=\\\"Nb Dice : \\\"\\r\\n            min=\\\"1\\\">\\r\\n        </span>\\r\\n\\r\\n        <span>\\r\\n          <select name=\\\"diceType\\\" [(ngModel)]=\\\"dice.diceType\\\">\\r\\n            <option *ngFor=\\\"let diceType of [2,3,4,6,10,20,100]\\\" [value]=\\\"diceType\\\" [selected]=\\\"diceType==dice.diceType\\\">\\r\\n              D{{diceType}}\\r\\n            </option>\\r\\n          </select>\\r\\n        </span>\\r\\n\\r\\n        <span>\\r\\n          + \\r\\n          <input\\r\\n            [(ngModel)]=\\\"dice.bonus\\\"\\r\\n            type=\\\"number\\\"\\r\\n            name=\\\"diceBonus\\\"\\r\\n          >\\r\\n        </span>\\r\\n\\r\\n        <button (click)=\\\"rollDices()\\\" class=\\\"material-icons cta\\\">subdirectory_arrow_left</button>\\r\\n    </div>\\r\\n  </form>  \\r\\n\\r\\n    <div class=\\\"delete-button\\\">\\r\\n      <button (click)=\\\"selfDelete()\\\" class=\\\"material-icons\\\">delete_outline</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Dice message on click-->\\r\\n  <div  *ngIf=\\\"dice.resultMessage\\\">\\r\\n    <label>Result: {{dice.resultMessage}} </label>\\r\\n  </div>\\r\\n</mat-card>    \"","module.exports = \".dice__roll-button {\\n  height: 100%; }\\n\\nspan > input {\\n  width: 50px;\\n  border-radius: 5px;\\n  text-align: center; }\\n\\nspan > select {\\n  border-radius: 7px; }\\n\\n.dice-component {\\n  display: inline-flex;\\n  justify-content: space-between;\\n  width: 100%; }\\n\\n.dice-component > .form-child {\\n    flex-grow: 1;\\n    display: inline-flex; }\\n\\n.dice-component > .delete-button {\\n    flex-shrink: 1; }\\n\\n.dice-component > .delete-button > button {\\n      height: 100%;\\n      background-color: #BF2B20; }\\n\\n.cta {\\n  background-color: #2B78FE;\\n  color: white; }\\n\\nmat-card {\\n  margin-bottom: 15px; }\\n\\n.dice-title {\\n  display: inline; }\\n\\n.dice-title-edit {\\n  display: inline; }\\n\\n.small {\\n  font-size: 16px;\\n  padding-left: 10px;\\n  cursor: pointer; }\\n\"","import { Component, Input, Output , ViewContainerRef, EventEmitter } from '@angular/core';\nimport { Dice } from '../dice'\n\n@Component({\n  selector: 'app-dice',\n  templateUrl: './dice.component.html',\n  styleUrls: ['./dice.component.scss']\n})\nexport class DiceComponent {\n  @Input('dice') dice : Dice;\n  @Output() onDelete: EventEmitter<any> = new EventEmitter();\n  editionMode : boolean = false;\n\n  selfDelete() {\n      this.onDelete.emit(this.dice.id);\n  }\n\n  constructor() {}\n\n\n  rollDices(){\n    let tmp =\"\", count = 0;\n    for (let i = 0; i< this.dice.nbDice; i++){\n      let valJet = Math.floor(Math.random() * this.dice.diceType) + 1;\n      tmp += valJet.toString() + \" + \";\n      count += valJet;\n    }\n    tmp += this.dice.bonus.toString();\n    count += this.dice.bonus;\n\n    tmp += \" = \" + count;\n\n    this.dice.resultMessage = tmp;\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class MonsterService {\r\n  baseUrl = 'https://api-dice.herokuapp.com/';\r\n  \r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  getUsers() {\r\n    return this.http.get(this.baseUrl + 'users');\r\n  }\r\n}","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}